#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <7 8>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <8 9>;
        };

        semicoron {
            bindings = <&kp SEMI>;
            key-positions = <20 19>;
        };

        singlequote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <20 21>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <10 11>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 6 Q           &kp W         &kp E         &kp R               &kp T                                             &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &lt_to_layer_0 5 F  &kp G      &kp LC(SPACE)        &kp LS(CAPSLOCK)  &kp H        &kp J  &kp K      &kp L    &mt RIGHT_SHIFT ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V               &kp B      &kp CAPSLOCK         &kp B             &kp N        &kp M  &kp COMMA  &kp DOT  &kt SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 4 SPACE         &lt 2 DEL  &lt 7 BACKSPACE      &lt 3 SPACE       &lt 1 ENTER                             &lt 6 PRINTSCREEN
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &trans                      &kp INS  &kp DEL  &kp HOME  &kp END  &trans
&trans  &kp F4  &kp F5  &kp F6  &trans  &trans      &trans  &trans   &kp F10  &kp F11   &kp F12  &trans
&trans  &kp F7  &kp F8  &kp F9  &trans  &trans      &trans  &trans   &trans   &trans    &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                               &trans
            >;
        };

        NUM {
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5                      &kp N6  &kp N7            &kp N8             &kp N9          &kp N0
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans            &trans             &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                       &trans
            >;
        };

        VIM {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))  &trans         &kp LC(TAB)    &trans                           &trans          &kp PAGE_UP     &kp HOME      &trans     &trans
&kp END         &trans           &kp PAGE_DOWN  &kp PAGE_DOWN  &trans       &trans      &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans
&kp LEFT_SHIFT  &kp DEL          &kp LC(C)      &kp LC(V)      &kp PAGE_UP  &trans      &trans  &trans          &trans          &trans        &trans     &trans
&trans          &trans           &trans         &trans         &trans       &trans      &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans                      &trans        &trans    &trans    &kp LA(RIGHT)  &trans
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &kp LA(LEFT)  &mkp MB1  &mkp MB3  &mkp MB2       &trans
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans    &trans    &trans         &trans
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans                                           &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SETTINGS {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &bootloader      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
&trans  &trans  &trans  &trans  &trans  &trans           &trans       &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans           &trans       &trans                                                  &trans
            >;
        };

        MARKS {
            bindings = <
&kp EXCL  &kp AT     &kp HASH    &kp DOLLAR  &kp PERCENT                      &kp CARET  &kp AMPS   &kp STAR  &trans     &kp PERCENT
&kp AMPS  &kp ASTRK  &kp DOLLAR  &trans      &kp HASH     &trans      &trans  &kp MINUS  &trans     &kp AT    &kp SLASH  &trans
&trans    &kp EXCL   &kp CARET   &trans      &trans       &trans      &trans  &trans     &kp MINUS  &trans    &trans     &trans
&trans    &trans     &trans      &trans      &trans       &trans      &trans  &trans                                     &trans
            >;
        };
    };
};
